image: node

stages:
  - build
  - test
  - deploy staging
  - deploy production
  - production test
  - cache

cache: 
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull

variables:
  STAGING_DOMAIN: ARR191Professional-staging.surge.sh
  PRODUCTION_DOMAIN: ARR191Professional.surge.sh

update cache:
  stage: cache
  script:
    - npm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: push
  only:
    - schedules

build website:
  stage: build
  cache: {}
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public
  except:
    - schedules

test artifacts:
  image: alpine
  stage: test
  cache: {}
  script:
    - grep -q "Gatsby" ./public/index.html
  except:
    - schedules

test website:
  stage: test
  cache:
    policy: pull
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"
  except:
    - schedules

deploy staging:
  stage: deploy staging
  environment: 
    name: staging
    url: https://$STAGING_DOMAIN
  when: manual
  cache:
    policy: pull
  script:
    - npm install --global surge
    - surge --project ./public --domain $STAGING_DOMAIN
  except:
    - schedules

deploy production:
  stage: deploy production
  environment: 
    name: production
    url: https://$PRODUCTION_DOMAIN
  cache:
    policy: pull
  script:
    - npm install --global surge
    - surge --project ./public --domain $PRODUCTION_DOMAIN
  except:
    - schedules

test deployed website:
  stage: production test
  image: alpine
  cache: {}
  script:
    - apk add --no-cache curl
    - curl -s "https://$PRODUCTION_DOMAIN" | grep -q "Gatsby"
    - curl -s "https://$PRODUCTION_DOMAIN" | grep -q "$CI_COMMIT_SHORT_SHA"
  except:
    - schedules